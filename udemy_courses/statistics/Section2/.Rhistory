?getURL
library(httr)
##Lets work with in-built R datasets
data(iris)
str(iris) #structure of data frame
summary(iris)
head(iris,10)
## subset/isolate the first 6 rows in different data frame
df6=iris[1:6,]
str(df6)
df6
##isloate first 2 columns
df2=iris[,1:2]
head(df2)
str(df2)
##isolate all rows and 2 columns
x=iris[, c("Sepal.Length", "Sepal.Width")]
str(x)
##subset once column
## without drop the x2 will be a vector
x2= iris[, 'Sepal.Length', drop=FALSE]
head(x2)
##subset once column
## without drop the x2 will be a vector
x2= iris[, 'Sepal.Length', drop=TRUE]
head(x2)
str(x2)
##subset once column
## without drop the x2 will be a vector
x2= iris[, 'Sepal.Length', drop=FALSE]
head(x2)
str(x2)
## select variables Sepal.Length, Petal.Length, Species
vars <- c("Sepal.Length", "Petal.Length", "Species")
nd <- iris[vars]
head(nd)
names(iris)
names(iris) %in% c("Species")
nd <- iris[!vars]
# exclude column Species
vars <- names(iris) %in% c("Species")
nd <- iris[!vars]
str(nd)
head(nd)
df_setosa=subset(iris,iris$Species=="setosa")
str(df_setosa)
summary(df_setosa)
head(df_setosa)
data()
head(CO2)
??QO2
??CO2
??airquality ##more info about these data
str(airquality)
head(airquality)
summary(airquality)
aq=na.omit(airquality) #remove rows containing NAs
head(aq)
na.fail(airquality)
head(aq)
summary(aq)
library(tidyverse)
qplot(airquality, Ozone)
ggplot(airquality, aes(Ozonoe)) + geom_boxplot()
ggplot(airquality, aes(Ozone)) + geom_boxplot()
ggplot(airquality, aes(y = Ozone)) + geom_boxplot()
ggplot(airquality, aes(x = Ozone)) + geom_boxplot()
boxplot(airquality$Ozone)##Randomly distributed NAs
complete.cases(airquality)
head(aq2)
summary(aq2)
aq2=airquality[complete.cases(airquality), ] #only retain non-NA rows
head(aq2)
summary(aq2)
## replace NAs with 0
aqty=airquality
is.na(aqty)
aqty[is.na(aqty)]<-0
head(aqty)
summary(aqty)
summary(aq2)
view(boston1)
View(boston1)
meanOzone=mean(airquality$Ozone,na.rm=T)
meanOzone
meanOzone=mean(airquality$Ozone,na.rm=F)
meanOzone
meanOzone=mean(airquality$Ozone,na.rm=T)
airquality$Ozone
aqty.fix=ifelse(is.na(airquality$Ozone),meanOzone,airquality$Ozone)
aqty.fix
aqty.fix[is.na(airquality$Ozone)] <- meanOzone
aqty.fix
aqty2=airquality
md.pattern(aqty2)
##visualize the patterns of NAs
library(mice)
install.packages(mice)
install.packages(mice)
install.packages("mice")
##visualize the patterns of NAs
library(mice)
aqty2=airquality
md.pattern(aqty2)
?md.pattern
str(aqty2)
?aggr
library(VIM)
?aggr
mp <- aggr(aqty2)
data()
head(Nile)
head(Orange)
aggr(Orange)
?mice
#impute
#500 iterataions of predictive mean mapping for imputing
#5 datasets
im_aqty<- mice(aqty2, m=5, maxit = 50, method = 'pmm', seed = 500)
md.pattern(im_aqty)
im_aqty
im_aqty$imp$Ozone #values imputed in ozone
#get back the completed dataset u
completedData <- complete(im_aqty,1)
head(completedData)
?complete
completedData
data(iris)
names(iris)
summary(iris)
hist(iris$Sepal.Length) # distribution of a varaibles
boxplot(iris$Sepal.Length,main="Summary of iris",xlab="Sepal Length")
#relation bw 2 quantitative variables
plot(iris$Sepal.Length,iris$Sepal.Width)
data(mtcars)
names(mtcars)
str(mtcars)
counts <- table(mtcars$gear)
counts
mtcars$gear
str(mtcars)
barplot(counts, main="Cars", xlab="Number of Gears")
barplot(counts, main="Cars", xlab="Number of Gears",horiz=TRUE)
barplot(counts, main="Cars", xlab="Number of Gears",horiz=TRUE,col="red")
library(ggplot2)
# relation bw Sepal length and width of 3 different species
qplot(Sepal.Length, Petal.Length, data = iris, color = Species)
# We see that Iris setosa flowers have the narrowest petals.
qplot(Sepal.Length, Petal.Length, data = iris, color = Species, size = Petal.Width)
# relation bw Sepal length and width of 3 different species
qplot(Sepal.Length, Petal.Length, data = iris, color = Species)
# We see that Iris setosa flowers have the narrowest petals.
qplot(Sepal.Length, Petal.Length, data = iris, color = Species, size = Petal.Width)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species,
xlab = "Sepal Length", ylab = "Petal Length",
main = "Sepal vs. Petal Length in Iris data")
qplot(Sepal.Length, Petal.Length, data = iris, geom = "line", color = Species) #line plot
##use ggplot for viz
#Format: ggplot(data = , aes(x =, y =, ...)) + geom_xxx()
#aes-> we specify x,y
#geom-> Plot type: wether its a histogram, boxplot
ggplot(data = iris, aes(Sepal.Length, Sepal.Width)) + geom_point()
#boxplot
ggplot(iris, aes(x = Species, y = Sepal.Length)) +geom_boxplot()
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width)) + geom_point() + facet_grid(. ~ Species) + geom_smooth(method = "lm")
#distinguish between species using colour scheme
ggplot(data = iris, aes(Sepal.Length, Sepal.Width)) + geom_point(aes(colour = (Species)))
#or
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, shape = Species)) + geom_point()
#use mtcars as a factor in visualization
ggplot(mtcars, aes(x = mpg, y = wt, colour = factor(gear))) + geom_point()
#use mtcars as a factor in visualization
ggplot(mtcars, aes(x = mpg, y = wt, colour = factor(gear))) + geom_point()
#use mtcars as a factor in visualization
ggplot(mtcars, aes(x = mpg, y = wt, colour = gear)) + geom_point()
#use mtcars as a factor in visualization
ggplot(mtcars, aes(x = mpg, y = wt, colour = factor(gear)) + geom_point()
#use mtcars as a factor in visualization
ggplot(mtcars, aes(x = mpg, y = wt, colour = factor(gear)) + geom_point()
#use mtcars as a factor in visualization
ggplot(mtcars, aes(x = mpg, y = wt, colour = factor(gear))) + geom_point()
#histogram
ggplot(iris, aes(x = Sepal.Length)) + geom_boxplot()
histogram
#histogram
ggplot(iris, aes(x = Sepal.Length)) + geom_histogram()
#histogram
ggplot(iris, aes(x = identify(),y = Sepal.Length)) + geom_boxplot()
histogram
#histogram
ggplot(iris, aes(x = Sepal.Length)) + geom_histogram()
ggplot(iris, aes(x = Sepal.Length, fill = Species)) + geom_histogram()
#boxplot
ggplot(iris, aes(x = Species, y = Sepal.Length)) +geom_boxplot()
ggplot(data = iris, aes(Sepal.Length, Sepal.Width)) + geom_point() + facet_grid(. ~ Species)
iris
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width)) + geom_point() + facet_grid(. ~ Species) + geom_smooth(method = "lm")
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width)) + geom_point() +  geom_smooth(method = "lm")
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width)) + geom_point() + facet_grid(. ~ Species) + geom_smooth(method = "lm")
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width, colour = Species) + geom_point() + facet_grid(. ~ Species) + geom_smooth(method = "lm")
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width,colour = Species)) + geom_point() + facet_grid(. ~ Species) + geom_smooth(method = "lm")
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width,colour = Species))
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width,colour = Species)) + geom_point()
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width,colour = Species)) + geom_point()  + geom_smooth(method = "lm")
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width,colour = Species)) + geom_point()  + geom_smooth(method = "lm") +  facet_grid(. ~ Species)
#visualize relationship bw the different variables for the 3 species
ggplot(data = iris, aes(Sepal.Length, Sepal.Width, colour = Species)) + geom_point() + facet_grid(. ~ Species) + geom_smooth(method = "lm")
skewness(iris$Petal.Length)
